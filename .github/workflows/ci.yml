name: CI

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

env:
  RUST_BACKTRACE: 1
  RUSTFLAGS: "-Dwarnings"

defaults:
  run:
    shell: bash

jobs:
  # Check formatting
  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install Rust
      run: rustup update stable && rustup default stable
    - name: Check formatting
      run: cargo fmt --all --check
  
   # Check clippy.
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - name: clippy
        run: cargo clippy --all --all-features --tests --examples
  
  # Run miri.
  miri:
    strategy:
      fail-fast: false
      matrix:
        group:
          - channel
          - others
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Miri
        run: |
          rustup toolchain install nightly --component miri
          rustup override set nightly
          cargo miri setup
      - name: Test with Miri
        run: cargo miri test
  
  # Run loom tests.
  loom:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - name: loom
        run: RUSTFLAGS="--cfg loom -C debug-assertions"  cargo test --release --tests

  # Minimal dependency versions
  minimal-dependency-versions:
    name: minimal dependency versions
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - name: Install nightly Rust
        run: rustup update nightly
      - name: Set all dependencies to lowest allowed versions
        run: cargo +nightly update -Z minimal-versions
      - name: Test
        run: cargo test

  # Stable
  stable:
    name: stable
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup update stable && rustup default stable
      - name: Test
        run: cargo test

  # check docs
  docs:
    name: build docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup update nightly && rustup default nightly
      - name: cargo doc
        run: cargo doc --no-deps --all-features
        env:
          RUSTDOCFLAGS: "--cfg docsrs -Dwarnings"